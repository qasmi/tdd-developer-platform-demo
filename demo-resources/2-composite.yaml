apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xdatabases.example.org
spec:
  group: example.org
  names:
    kind: XDatabase
    plural: xdatabases
  claimNames:
    kind: Database
    plural: databases
  defaultCompositionRef:
    name: mariadbcomposition
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                storage:
                  type: string
                  default: "1Gi"
                dbName:
                  type: string
                  default: "drupal"
                user:
                  type: string
                  default: "drupal"
                password:
                  type: string
                  default: "drupalpass"
              required: ["dbName", "user", "password"]
            status:
              type: object
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: mariadbcomposition
spec:
  compositeTypeRef:
    apiVersion: example.org/v1alpha1
    kind: XDatabase
  mode: Pipeline
  pipeline:
    - step: create-secret
      functionRef:
        name: drupal-app-externaldb
      input:
        # MANDATORY FIX: Wrapping input in an explicit resource type
        apiVersion: apiextensions.k8s.io/v1
        kind: JSON
        # Values dynamically pulled from the XDatabase Claim
        stringData:
          root-password: rootpass
          username: ${observed.resource.spec.user}
          password: ${observed.resource.spec.password}
          database: ${observed.resource.spec.dbName}

    - step: create-mariadb
      functionRef:
        name: crossplane-contrib-function-kubernetes-apply
      input:
        # MANDATORY FIX: Wrapping input in an explicit resource type
        apiVersion: apiextensions.k8s.io/v1
        kind: JSON
        manifests:
          - apiVersion: apps/v1
            kind: StatefulSet
            metadata:
              name: mariadb
              # CRITICAL: Use Paved Access Path (PAPs) to reference the Claim's namespace
              namespace: ${observed.resource.metadata.namespace} 
              labels:
                app: mariadb
            spec:
              selector:
                matchLabels:
                  app: mariadb
              serviceName: mariadb
              replicas: 1
              template:
                metadata:
                  labels:
                    app: mariadb
                spec:
                  containers:
                    - name: mariadb
                      image: mariadb:11.3
                      ports:
                        - containerPort: 3306
                          name: mysql
                      env:
                        - name: MYSQL_ROOT_PASSWORD
                          value: rootpass # Hardcoded for simplicity, but should reference a Secret
                        - name: MYSQL_DATABASE
                          valueFrom:
                            secretKeyRef:
                              name: mariadb-secret
                              key: database
                        - name: MYSQL_USER
                          valueFrom:
                            secretKeyRef:
                              name: mariadb-secret
                              key: username
                        - name: MYSQL_PASSWORD
                          valueFrom:
                            secretKeyRef:
                              name: mariadb-secret
                              key: password
                      volumeMounts:
                        - name: data
                          mountPath: /var/lib/mysql
              volumeClaimTemplates:
                - metadata:
                    name: data
                  spec:
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: ${observed.resource.spec.storage} # Dynamic Storage size
          - apiVersion: v1
            kind: Service
            metadata:
              name: mariadb
              # CRITICAL: Use Paved Access Path (PAPs) to reference the Claim's namespace
              namespace: ${observed.resource.metadata.namespace} 
              labels:
                app: mariadb
            spec:
              ports:
                - port: 3306
                  targetPort: mysql
              selector:
                app: mariadb
          - apiVersion: v1
            kind: Secret
            metadata:
              name: mariadb-secret
              # CRITICAL: Use Paved Access Path (PAPs) to reference the Claim's namespace
              namespace: ${observed.resource.metadata.namespace} 
            stringData:
              # Values set dynamically using PAPs for consistency (though this secret will be overwritten by the Function in step 0)
              root-password: rootpass
              username: ${observed.resource.spec.user}
              password: ${observed.resource.spec.password}
              database: ${observed.resource.spec.dbName}
